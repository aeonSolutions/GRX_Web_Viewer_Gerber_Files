{"version":3,"sources":["config/config.js","components/functional/QualitySlider.jsx","components/functional/LayerListItem.jsx","components/functional/UnloadedLayerListItem.jsx","components/functional/BlendMode.jsx","components/functional/UploadGerber.jsx","components/functional/UploadModal.jsx","components/functional/CreateJob.jsx","components/functional/RulerKit.jsx","components/functional/SelectKit.jsx","components/SideBar.jsx","components/functional/InfoCoords.jsx","components/Renderer.jsx","App.jsx","index.js"],"names":["require","config","module","exports","backendurl","process","REACT_APP_GRX_API","port","REACT_APP_GRX_APIPORT","QualitySlider","renderScale","rendercontainer","useContext","DrawBoardContext","getComputedStyle","getPropertyValue","useState","quality","setQuality","style","margin","flex","padding","FormatPainterOutlined","min","max","onChange","value","setProperty","handleChange","LayerListItem","props","layer","visible","setVisible","color","setColor","useEffect","svgElement","document","getElementById","name","waitForElement","setTimeout","width","wrap","content","event","rgb","r","g","b","hex","handleColorChange","title","BgColorsOutlined","placement","trigger","whiteSpace","checked","console","log","target","add","remove","fetchLayer","a","data","blend","setBlend","size","handleBlendMode","Dragger","Upload","UploadGerber","job","fileList","setFileList","reloading","setReloading","getExistingFiles","fetch","json","response","items","map","filename","uid","status","handleRemove","file","method","Promise","resolve","reject","err","error","text","uploadprops","action","info","newfileList","url","onRemove","multiple","UploadOutlined","fontSize","textAlign","loading","type","icon","ReloadOutlined","onClick","UploadModal","replaceArtwork","onOk","e","onCancel","destroyOnClose","keyboard","CreateJob","update","setJob","waitInput","setWaitInput","handleOk","message","warning","errjson","JSON","parse","okButtonProps","disabled","placeholder","onPressEnter","Text","Typography","RulerKit","drawing","drawContainer","drawBoardSize","drawBoardScale","handleMouseLocation","mouseCoordinates","pixel","x","y","inch","mm","draw","offsetX","offsetY","reCreateDrawBoard","innerHTML","drawingBoard","SVG","id","svgChildElement","childNodes","top","left","position","transformOrigin","transform","cursor","filter","handleRulerKit","ruler","addEventListener","once","key","removeEventListener","coordinates","startPosition","line","stroke","linecap","click","font","fill","family","lineDrawing","attr","x2","y2","move","toFixed","Math","sqrt","pow","doc_keyDown","altKey","code","SelectKit","svgContainer","objectSelectionKit","oldDrawContainerNodes","removeChild","initColor","querySelector","defs","querySelectorAll","svgElements","units","getAttribute","slice","svgChildElementClone","cloneNode","defList","forEach","node","push","nodeName","attributes","onmouseover","lineWidth","d","pad","find","def","substring","shapeid","shape","infoBar","oldInfo","createElement","toUpperCase","nodeMap","array","string","i","length","deriveNodeAttributes","replaceChild","onmouseleave","appendChild","parentNode","Option","Select","TabPane","OptGroup","Tabs","Search","Input","Link","SideBar","fetchData","urlext","setState","percent","state","layerdata","useoutline","Array","frontload","finisheddata","getLayerList","side","svg","changeDOMSVG","removeDOMSVG","addDOMSVG","getJobList","search","jobList","Jobs","Name","handleJobDelete","handleFrontLoad","handleUseOutline","hideSidebar","sidebarhidden","sidebar","showSidebar","layers","rendered","objectSelection","coordinatesActive","height","className","hidden","this","defaultSize","enable","right","bottom","topRight","bottomRight","bottomLeft","topLeft","maxWidth","minWidth","backgroundColor","backdropFilter","transition","pointerEvents","bodyStyle","indicator","LoadingOutlined","spin","animated","inkBar","tabPane","defaultActiveKey","centered","tab","onSearch","overflowX","overflowY","header","span","dataSource","renderItem","jobname","Item","onConfirm","okText","cancelText","CloseCircleOutlined","item","UnloadedLayerListItem","setSVGinDIV","removeSVGinDIV","forceRender","plain","VideoCameraOutlined","defaultValue","cameraSelector","BlendMode","newState","Component","InfoCoords","setCoordinates","infobar","setInfoCoordinates","React","createContext","Renderer","CSS3DObjects","addInitSVGFromDom","element","frontPCBObject","CSS3DObject","z","context","cssScene","backPCBObject","initDrawBoard","test","navigator","userAgent","cssText","zIndex","setAttribute","layerartwork","finishedartwork","removeAllLayers","addLayer","children","divLayer","floor","random","addElementToThree","viewBoxString","unit","viewBox","split","originx","Number","originy","dataset","widthtext","heighttext","removeLayer","removeCSS3DObject","newCSS3DObject","removeAllCSS3DObjects","boardLayers","updateCSSObjects","child","object","camera","THREE","innerWidth","innerHeight","controls","OrbitControls","cssRenderer","domElement","enableRotate","zoomSpeed","cameraType","offsetWidth","offsetHeight","setupScene","clientWidth","clientHeight","CSS3DRenderer","setSize","clock","stats","Stats","onWindowResize","aspect","updateProjectionMatrix","animationHandler","render","requestAnimationFrame","Provider","clear","ref","textShadow","window","ResizeObserver","observe","App","windowheight","version","href","ReactDOM"],"mappings":"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","file":"static/js/main.f00c9b71.chunk.js","sourcesContent":["const dotenv = require('dotenv')\r\ndotenv.config()\r\n\r\nmodule.exports = {\r\n  backendurl: process.env.REACT_APP_GRX_API || 'https://grx.creery.org',\r\n  port: process.env.REACT_APP_GRX_APIPORT || '/api',\r\n}\r\n","import React, { useState, useContext } from 'react'\r\nimport { DrawBoardContext } from '../Renderer'\r\n\r\nimport { Slider, Col, Row } from 'antd'\r\nimport { LoadingOutlined, VideoCameraOutlined, FormatPainterOutlined } from '@ant-design/icons'\r\n\r\nconst QualitySlider = () => {\r\n  const { rendercontainer } = useContext(DrawBoardContext)\r\n  let renderScale\r\n  if (rendercontainer) {\r\n    renderScale = getComputedStyle(rendercontainer).getPropertyValue('--svg-scale')\r\n  }\r\n  const [quality, setQuality] = useState(renderScale)\r\n\r\n  const handleChange = (value) => {\r\n    rendercontainer.style.setProperty('--svg-scale', value)\r\n    setQuality(value)\r\n  }\r\n\r\n  return (\r\n    <Row style={{ margin: '5px ' }}>\r\n      <Col flex='30px' style={{ padding: '5px' }}>\r\n        <FormatPainterOutlined />\r\n      </Col>\r\n      <Col flex='auto'>\r\n        <Slider min={1} max={10} onChange={(value) => handleChange(value)} value={quality} />\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default QualitySlider\r\n","import React, { useState, useEffect } from 'react'\r\n\r\nimport { Checkbox, Popover, Badge, Tooltip, Row, Col } from 'antd'\r\nimport { BgColorsOutlined } from '@ant-design/icons'\r\nimport { SliderPicker } from 'react-color'\r\n\r\nconst LayerListItem = (props) => {\r\n  const [visible, setVisible] = useState(props.layer.visible)\r\n  const [color, setColor] = useState('#FFFFFF')\r\n  const handleChange = (value) => {\r\n    console.log(value)\r\n    props.layer.visible = value\r\n    setVisible(value)\r\n  }\r\n\r\n  const handleColorChange = (color, event) => {\r\n    var layerObject = document.getElementById(props.layer.name)\r\n    layerObject.style.color = `rgba(${color.rgb.r}, ${color.rgb.g}, ${color.rgb.b}, 0.7)`\r\n    setColor(color.hex)\r\n  }\r\n\r\n  useEffect(() => {\r\n    let svgElement = document.getElementById(props.layer.name)\r\n    let waitForElement = () => {\r\n      if (svgElement !== null) {\r\n        setColor(getComputedStyle(svgElement).getPropertyValue('color'))\r\n      } else {\r\n        svgElement = document.getElementById(props.layer.name)\r\n        setTimeout(waitForElement, 250)\r\n      }\r\n    }\r\n    waitForElement()\r\n  }, [props.layer.name])\r\n\r\n  return (\r\n    <div style={{ width: '100%' }}>\r\n      <Row wrap={false}>\r\n        <Col flex=\"10px\">\r\n          <Popover\r\n            content={<SliderPicker color={color} onChange={(color, event) => handleColorChange(color, event)} />}\r\n            title={\r\n              <div>\r\n                <BgColorsOutlined />\r\n            &nbsp; ColorPicker\r\n          </div>\r\n            }\r\n            placement='right'\r\n            trigger='click'\r\n          >\r\n            <Badge color={color} />\r\n          </Popover>\r\n        </Col>\r\n        <Col flex=\"auto\">\r\n          <Checkbox style={{ whiteSpace: 'pre' }} checked={visible} onChange={(value) => handleChange(value.target.checked)}>\r\n            <Tooltip placement='right' title={props.layer.name}>\r\n              {props.layer.name}\r\n            </Tooltip>\r\n          </Checkbox>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LayerListItem\r\n","import React, { useState, useEffect } from 'react'\r\n\r\nimport { Checkbox, Popover, Badge, Tooltip, Row, Col } from 'antd'\r\nimport { BgColorsOutlined, InfoCircleOutlined } from '@ant-design/icons'\r\nimport { SliderPicker } from 'react-color'\r\n\r\nconst LayerListItem = (props) => {\r\n  let { layer, add, remove, fetchLayer } = props\r\n  const [visible, setVisible] = useState(props.layer.visible)\r\n  const [color, setColor] = useState('#FFFFFF')\r\n\r\n  const handleChange = async (value) => {\r\n    let svgElement = document.getElementById(layer.name)\r\n    console.log(svgElement)\r\n    console.log(layer)\r\n    if (value === true) {\r\n      var data = await fetchLayer(layer)\r\n      add(...data, svgElement)\r\n    } else if (value === false) {\r\n      remove(layer)\r\n    }\r\n    props.layer.visible = value\r\n    setVisible(value)\r\n  }\r\n\r\n  const handleColorChange = (color, event) => {\r\n    let svgElement = document.getElementById(layer.name)\r\n    svgElement.style.color = `rgba(${color.rgb.r}, ${color.rgb.g}, ${color.rgb.b}, 0.7)`\r\n    setColor(color.hex)\r\n  }\r\n\r\n  useEffect(() => {\r\n    console.log('Effect')\r\n    console.log(layer.name)\r\n    let svgElement = document.getElementById(layer.name)\r\n    let waitForElement = () => {\r\n      if (svgElement !== null) {\r\n        setColor(getComputedStyle(svgElement).getPropertyValue('color'))\r\n      } else {\r\n        svgElement = document.getElementById(layer.name)\r\n        setTimeout(waitForElement, 250)\r\n      }\r\n    }\r\n    waitForElement()\r\n  }, [props.layer.name])\r\n\r\n  return (\r\n    <div style={{ width: '100%' }}>\r\n      <Row wrap={false}>\r\n        <Col flex=\"10px\">\r\n          <Popover\r\n            content={<SliderPicker color={color} onChange={(color, event) => handleColorChange(color, event)} />}\r\n            title={\r\n              <div>\r\n                <BgColorsOutlined />\r\n            &nbsp; ColorPicker\r\n          </div>\r\n            }\r\n            placement='right'\r\n            trigger='click'\r\n          >\r\n            <Badge color={color} />\r\n          </Popover>\r\n        </Col>\r\n        <Col flex=\"auto\">\r\n          <Checkbox style={{ whiteSpace: 'pre' }} checked={visible} onChange={(value) => handleChange(value.target.checked)}>\r\n            <Tooltip placement='right' title={layer.name}>\r\n              {layer.name}\r\n            </Tooltip>\r\n          </Checkbox>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default LayerListItem\r\n","import React, { useState, useContext } from 'react'\r\nimport { DrawBoardContext } from '../Renderer'\r\nimport { Switch, Col, Row } from 'antd'\r\nimport { LoadingOutlined, VideoCameraOutlined, FormatPainterOutlined } from '@ant-design/icons'\r\n\r\nconst QualitySlider = () => {\r\n  //root = document.documentElement\r\n  const { rendercontainer } = useContext(DrawBoardContext)\r\n\r\n  const [blend, setBlend] = useState(false)\r\n\r\n  const handleBlendMode = (checked) => {\r\n    //var variable = getComputedStyle(variableParent).getPropertyValue('--blend-mode')\r\n    if (checked) {\r\n      rendercontainer.style.setProperty('--blend-mode', 'color')\r\n    } else {\r\n      rendercontainer.style.setProperty('--blend-mode', 'normal')\r\n    }\r\n    setBlend(checked)\r\n  }\r\n\r\n  return (\r\n    <Row style={{ margin: '5px ' }}>\r\n      <Col flex='auto' style={{ padding: '5px' }}>\r\n        Color Blend\r\n      </Col>\r\n      <Col flex='30px' style={{ padding: '5px' }}>\r\n        <Switch size='small' checked={blend} onChange={(checked) => handleBlendMode(checked)} />\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default QualitySlider\r\n","// REACT\r\nimport React, { useState, useEffect } from 'react'\r\n\r\n// ANT DESIGN\r\nimport { Upload, Button, Row, Col } from 'antd'\r\nimport { UploadOutlined, ReloadOutlined, InboxOutlined } from '@ant-design/icons'\r\nconst { Dragger } = Upload\r\n\r\n// CONFIG\r\nconst { backendurl, port } = require('../../config/config')\r\n\r\nconst UploadGerber = (props) => {\r\n  console.log(props.job)\r\n  var { job } = props\r\n  const [fileList, setFileList] = useState([])\r\n  const [reloading, setReloading] = useState(false)\r\n\r\n  useEffect(() => {\r\n    // Mount and Update\r\n    getExistingFiles()\r\n    return () => {\r\n      // Unmount\r\n    }\r\n  }, [])\r\n\r\n  const getExistingFiles = async () => {\r\n    setReloading(true)\r\n    var data = await fetch(`${backendurl}${port}/uploaded?job=${job}`)\r\n    var response = await data.json()\r\n    var items = response.map((filename) => ({\r\n      uid: filename,\r\n      name: filename,\r\n      status: 'done',\r\n    }))\r\n    setFileList(items)\r\n    setReloading(false)\r\n    return items\r\n  }\r\n\r\n  // fileList object example\r\n  // {\r\n  //   uid: '-1',\r\n  //   name: 'xxx.png',\r\n  //   status: 'done',\r\n  // },\r\n\r\n  const handleChange = (info) => {\r\n    console.log(info)\r\n    let newfileList = [...info.fileList]\r\n\r\n    // 1. Limit the number of uploaded files\r\n    // Only to show two recent uploaded files, and old ones will be replaced by the new\r\n    // fileList = fileList.slice(-2);\r\n\r\n    // 2. Read from response and show file link\r\n    newfileList = newfileList.map((file) => {\r\n      if (file.response) {\r\n        // Component will show file.url as link\r\n        console.log(file.url)\r\n        file.url = file.response.url\r\n      }\r\n      return file\r\n    })\r\n    setFileList(newfileList)\r\n  }\r\n\r\n  const handleRemove = async (file) => {\r\n    console.log(file)\r\n    try {\r\n      var response = await fetch(`${backendurl}${port}/file?job=${job}&filename=${file.name}`, {\r\n        method: 'DELETE',\r\n      })\r\n    } catch (err) {\r\n      throw err\r\n    }\r\n\r\n    return new Promise((resolve, reject) => {\r\n      try {\r\n        if (response.status !== 200) {\r\n          console.error(response)\r\n          var err = response.text()\r\n          throw err\r\n        }\r\n        //let data = response.json();\r\n        resolve(response)\r\n      } catch (err) {\r\n        reject(err)\r\n      }\r\n    })\r\n  }\r\n\r\n  const uploadprops = {\r\n    action: `${backendurl}${port}/upload?job=${job}`,\r\n    onChange: handleChange,\r\n    onRemove: handleRemove,\r\n    multiple: true,\r\n  }\r\n  return (\r\n    <div>\r\n      <Dragger {...uploadprops} fileList={fileList}>\r\n        <p>\r\n          <UploadOutlined style={{ fontSize: '32px' }} />\r\n        </p>\r\n        <p>Drag Gerber Files Here</p>\r\n        <p>(or click to open directory)</p>\r\n      </Dragger>\r\n      <div style={{ textAlign: 'right' }}>\r\n        <Button\r\n          loading={reloading}\r\n          type='text'\r\n          icon={<ReloadOutlined style={{ fontSize: '15px' }} />}\r\n          onClick={() => getExistingFiles()}\r\n        >\r\n          Reload\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UploadGerber\r\n","// REACT\r\nimport React, { useState, useEffect } from 'react'\r\n\r\n// ANT DESIGN\r\nimport { Modal, Button } from 'antd'\r\n\r\n// CUSTOM\r\nimport UploadGerber from './UploadGerber'\r\n\r\n// CONFIG\r\nconst { backendurl, port } = require('../../config/config')\r\n\r\nconst UploadModal = (props) => {\r\n  var { replaceArtwork, job } = props\r\n\r\n  const [visible, setVisible] = useState(false)\r\n\r\n  useEffect(() => {\r\n    // Mount and Update\r\n    return () => {\r\n      // Unmount\r\n    }\r\n  }, [job])\r\n\r\n  const showModal = () => {\r\n    setVisible(true)\r\n  }\r\n\r\n  const handleOk = (e) => {\r\n    console.log(e)\r\n    setVisible(false)\r\n    replaceArtwork(job)\r\n  }\r\n\r\n  const handleCancel = (e) => {\r\n    console.log(e)\r\n    setVisible(false)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Button type='text' size='small' onClick={showModal}>\r\n        Upload\r\n      </Button>\r\n      <Modal\r\n        title={`Import Gerbers into Job: ${job}`}\r\n        visible={visible}\r\n        onOk={handleOk}\r\n        onCancel={handleCancel}\r\n        destroyOnClose\r\n        keyboard\r\n      >\r\n        <UploadGerber job={job} />\r\n      </Modal>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UploadModal\r\n","// REACT\r\nimport React, { useState, useEffect } from 'react'\r\n\r\n// ANT DESIGN\r\nimport { Modal, Button, Input, message } from 'antd'\r\n\r\n// CONFIG\r\nconst { backendurl, port } = require('../../config/config')\r\n\r\nconst CreateJob = (props) => {\r\n  const { replaceArtwork, update } = props\r\n  const [visible, setVisible] = useState(false)\r\n  const [job, setJob] = useState(null)\r\n  const [waitInput, setWaitInput] = useState(true)\r\n\r\n  const showModal = () => {\r\n    setVisible(true)\r\n  }\r\n\r\n  const handleOk = async (e) => {\r\n    if (job == null || job == '') {\r\n      message.warning('Must Assign your job a name')\r\n      return\r\n    }\r\n    try {\r\n      var response = await fetch(`${backendurl}${port}/job?job=${job}`, {\r\n        method: 'POST',\r\n      })\r\n      if (response.status !== 200) {\r\n        var err = await response.text()\r\n        console.log(err)\r\n        try {\r\n          let errjson = JSON.parse(err)\r\n          err = errjson['Message']\r\n        } catch (e) { }\r\n        throw err\r\n      }\r\n    } catch (err) {\r\n      console.error(err)\r\n      message.error(err)\r\n      return\r\n    }\r\n    setVisible(false)\r\n    update()\r\n    replaceArtwork(job)\r\n  }\r\n\r\n  const handleCancel = (e) => {\r\n    setVisible(false)\r\n  }\r\n\r\n  const handleInput = (e) => {\r\n    setJob(e.target.value)\r\n    setWaitInput(false)\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Button type='text' size='small' onClick={showModal}>\r\n        Create\r\n      </Button>\r\n      <Modal\r\n        title={`Create New Job`}\r\n        visible={visible}\r\n        onOk={handleOk}\r\n        onCancel={handleCancel}\r\n        okButtonProps={{ disabled: waitInput }}\r\n        keyboard\r\n      >\r\n        <Input placeholder='enter job name' onChange={handleInput} onPressEnter={() => handleOk()} />\r\n      </Modal>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CreateJob\r\n","import React, { useState, useEffect, useContext } from 'react'\r\n\r\n// Ant Design\r\nimport { Button, Typography } from 'antd'\r\n\r\n// Context\r\nimport { DrawBoardContext } from '../Renderer'\r\n\r\n// SVGJS\r\nimport SVG from 'svg.js'\r\n\r\nconst { Text } = Typography\r\n\r\nconst RulerKit = (props) => {\r\n  const { drawContainer, drawBoardSize, drawBoardScale } = useContext(DrawBoardContext)\r\n  let drawing\r\n\r\n  const handleMouseLocation = (event, action) => {\r\n    let mouseCoordinates = { pixel: { x: 0, y: 0 }, inch: { x: 0, y: 0 }, mm: { x: 0, y: 0 }, draw: { x: 0, y: 0 } }\r\n    mouseCoordinates.pixel.x = (event.offsetX - drawBoardSize / 2) * drawBoardScale\r\n    mouseCoordinates.pixel.y = -((event.offsetY - drawBoardSize / 2) * drawBoardScale)\r\n    mouseCoordinates.inch.x = mouseCoordinates.pixel.x / 96\r\n    mouseCoordinates.inch.y = mouseCoordinates.pixel.y / 96\r\n    mouseCoordinates.mm.x = mouseCoordinates.inch.x * 24\r\n    mouseCoordinates.mm.y = mouseCoordinates.inch.y * 24\r\n    mouseCoordinates.draw.x = event.offsetX\r\n    mouseCoordinates.draw.y = event.offsetY\r\n    action(mouseCoordinates)\r\n  }\r\n\r\n  const reCreateDrawBoard = () => {\r\n    drawContainer.innerHTML = ''\r\n    let drawingBoard = SVG(drawContainer.id).size(drawBoardSize, drawBoardSize)\r\n    let svgChildElement = drawContainer.childNodes[0]\r\n    svgChildElement.style.top = `-${drawBoardSize / 2}px`\r\n    svgChildElement.style.left = `-${drawBoardSize / 2}px`\r\n    svgChildElement.style.position = `relative`\r\n    svgChildElement.style.transformOrigin = `center`\r\n    svgChildElement.style.transform = `scale(${drawBoardScale})`\r\n    svgChildElement.style.cursor = 'crosshair'\r\n    svgChildElement.style.filter = 'drop-shadow(2px 4px 6px black)'\r\n    return drawingBoard\r\n  }\r\n\r\n  const handleRulerKit = () => {\r\n    drawing = reCreateDrawBoard()\r\n    var action = (e) => handleMouseLocation(e, ruler)\r\n    drawContainer.addEventListener('click', action, { once: true })\r\n    let escape = (e) => {\r\n      if (e.key == 'Escape') {\r\n        console.log(e)\r\n        drawContainer.removeEventListener('click', action)\r\n        reCreateDrawBoard()\r\n      }\r\n    }\r\n    document.addEventListener('keydown', escape, { once: true })\r\n  }\r\n\r\n  const ruler = (coordinates) => {\r\n    let startPosition = coordinates\r\n    let line = drawing\r\n      .line(coordinates.draw.x, coordinates.draw.y, coordinates.draw.x, coordinates.draw.y)\r\n      .stroke({ color: 'white', width: 3, linecap: 'round' })\r\n    var text = drawing.text(`DX:0 DY:0 D:0`).click((e) => console.log(e))\r\n    text.font({ fill: 'white', family: 'Inconsolata', size: 50 })\r\n    let lineDrawing = (e) => {\r\n      handleMouseLocation(e, (coordinates) => {\r\n        line.attr({ x2: coordinates.draw.x, y2: coordinates.draw.y })\r\n        text\r\n          .move(coordinates.draw.x, coordinates.draw.y)\r\n          .text(\r\n            `DX:${(coordinates.inch.x - startPosition.inch.x).toFixed(5)}\" DY:${(\r\n              coordinates.inch.y - startPosition.inch.y\r\n            ).toFixed(5)}\" D:${Math.sqrt(\r\n              Math.pow(coordinates.inch.x - startPosition.inch.x, 2) +\r\n              Math.pow(coordinates.inch.y - startPosition.inch.y, 2)\r\n            ).toFixed(5)}\"`\r\n          )\r\n      })\r\n    }\r\n    drawContainer.addEventListener('mousemove', lineDrawing)\r\n    drawContainer.addEventListener('click', (e) => {\r\n      drawContainer.removeEventListener('mousemove', lineDrawing)\r\n    })\r\n  }\r\n\r\n  let doc_keyDown = (e) => {\r\n    console.log(e)\r\n    if (e.altKey && e.code === 'KeyR') {\r\n      handleRulerKit()\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('keydown', doc_keyDown, false)\r\n    return function cleanup() {\r\n      document.removeEventListener('keydown', doc_keyDown, false)\r\n    }\r\n  })\r\n\r\n  return (\r\n    <div>\r\n      <Button type='text' style={{ width: '100%' }} onClick={() => handleRulerKit()}>\r\n        Ruler&#160;<Text type='secondary'>(alt+r)</Text>\r\n      </Button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default RulerKit\r\n","import React, { useState, useEffect, useContext } from 'react'\r\n\r\n// Ant Design\r\nimport { Button, Typography } from 'antd'\r\n\r\n// Context\r\nimport { DrawBoardContext } from '../Renderer'\r\n\r\nconst { Text } = Typography\r\n\r\nconst SelectKit = (props) => {\r\n  const { drawContainer, drawBoardSize, drawBoardScale, svgContainer } = useContext(DrawBoardContext)\r\n\r\n  const deriveNodeAttributes = (nodeMap, units) => {\r\n    let array = [...nodeMap]\r\n    let string = ''\r\n    for (var i = 0; i < array.length; i++) {\r\n      if (array[i].nodeName != 'id') {\r\n        string += ` ${array[i].nodeName.toUpperCase()}: ${(array[i].value / 1000).toFixed(5)}${units}`\r\n      }\r\n    }\r\n    return string\r\n  }\r\n\r\n  const objectSelectionKit = () => {\r\n    let oldDrawContainerNodes = drawContainer.childNodes[0]\r\n    drawContainer.removeChild(oldDrawContainerNodes)\r\n    //let svgContainer = document.getElementById('svg-container')\r\n    //let divLayer = a // divLayer.id = layer.name\r\n    //var svgChildElement = divLayer.childNodes[0]\r\n    var svgChildElement = svgContainer.querySelector('div > svg') // Literally gets first SVG... Need way to select or tell what layer ...\r\n    let defs = svgChildElement.querySelectorAll('defs > *')\r\n    let svgElements = svgChildElement.querySelectorAll('g > *')\r\n    var widthattr = svgChildElement.getAttribute('width')\r\n    var units = widthattr.slice(-2)\r\n\r\n    // let old_element = svgChildElement\r\n    let svgChildElementClone = svgChildElement.cloneNode(true)\r\n\r\n    // Get Defs or Features in SVG\r\n    let defList = []\r\n    defs.forEach((node) => {\r\n      defList.push({ id: node.id, type: node.nodeName, attributes: node.attributes })\r\n    })\r\n    console.log(defList)\r\n\r\n    let initColor\r\n    svgElements.forEach((node) => {\r\n      initColor = node.style.color\r\n      let g\r\n      node.onmouseover = (e) => {\r\n        //console.log(e)\r\n        e.target.style.color = '#08979c'\r\n\r\n        if (e.target.nodeName == 'path') {\r\n          g = {\r\n            type: e.target.nodeName,\r\n            g: 'path',\r\n            lineWidth: e.target.attributes['stroke-width'] ? e.target.attributes['stroke-width'].value : 0,\r\n            code: e.target.attributes.d.value,\r\n            attr: e.target.attributes,\r\n          }\r\n        } else if (e.target.nodeName == 'use') {\r\n          let pad = defList.find((def) => def.id == e.target.attributes['xlink:href'].value.substring(1))\r\n          //console.log(pad)\r\n          g = {\r\n            type: e.target.nodeName,\r\n            g: 'pad',\r\n            x: e.target.attributes.x.value,\r\n            y: e.target.attributes.y.value,\r\n            shapeid: e.target.attributes['xlink:href'].value,\r\n            shape: pad,\r\n            attr: e.target.attributes,\r\n          }\r\n        }\r\n        let infoBar = document.getElementById('bottom-info-bar')\r\n        let oldInfo = infoBar.childNodes[0]\r\n        let info = document.createElement('h4')\r\n        //console.log(e.target.nodeName)\r\n        //let attributes = deriveNodeAttributes(g.shape.attributes)\r\n        info.innerHTML = g\r\n          ? g.g == 'path'\r\n            ? g.lineWidth == '0'\r\n              ? `SURFACE`\r\n              : `LINE | Width: ${g.lineWidth / 1000}${units}`\r\n            : `PAD | Shape: ${g.shape.type == 'g'\r\n              ? `SPECIAL | X: ${(g.x / 1000).toFixed(5)}${units} Y: ${(g.y / 1000).toFixed(5)}${units}`\r\n              : `${g.shape.type.toUpperCase()}  | X: ${(g.x / 1000).toFixed(5)}${units} Y: ${(g.y / 1000).toFixed(\r\n                5\r\n              )}${units} | ${deriveNodeAttributes(g.shape.attributes, units)}`\r\n            }`\r\n          : 'NA'\r\n        if (g) infoBar.replaceChild(info, oldInfo)\r\n      }\r\n\r\n      node.onmouseleave = (e) => {\r\n        e.target.style.color = initColor\r\n      }\r\n    })\r\n\r\n    let escape = (e) => {\r\n      if (e.key == 'Escape') {\r\n        drawContainer.appendChild(oldDrawContainerNodes)\r\n        svgChildElement.parentNode.replaceChild(svgChildElementClone, svgChildElement)\r\n      }\r\n    }\r\n    document.addEventListener('keydown', escape, { once: true })\r\n    // svgContainer.onclick = (e) => {\r\n    //   if (drawContainer.innerHTML != '') {\r\n    //     return\r\n    //   }\r\n    //   e.target.style.color = '#08979c'\r\n    //   var old_element = svgChildElement\r\n    //   var new_element = old_element.cloneNode(true)\r\n    //   old_element.parentNode.replaceChild(new_element, old_element)\r\n    // }\r\n  }\r\n\r\n  let doc_keyDown = (e) => {\r\n    if (e.altKey && e.code === 'KeyS') {\r\n      objectSelectionKit()\r\n    }\r\n  }\r\n\r\n  const setUpKeyboardEvents = () => { }\r\n\r\n  useEffect(() => {\r\n    document.addEventListener('keydown', doc_keyDown, false)\r\n    return function cleanup() {\r\n      document.removeEventListener('keydown', doc_keyDown, false)\r\n    }\r\n  })\r\n\r\n  return (\r\n    <div>\r\n      <Button type='text' style={{ width: '100%' }} onClick={() => objectSelectionKit()}>\r\n        Select&#160;<Text type='secondary'>(alt+s)</Text>\r\n      </Button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SelectKit\r\n","// REACT\r\nimport React, { Component } from 'react'\r\n\r\n// ANT DESIGN UI\r\nimport {\r\n  Spin,\r\n  Switch,\r\n  Alert,\r\n  Button,\r\n  Card,\r\n  Select,\r\n  Tabs,\r\n  Row,\r\n  Col,\r\n  List,\r\n  Input,\r\n  Slider,\r\n  Radio,\r\n  Checkbox,\r\n  message,\r\n  Progress,\r\n  Popconfirm,\r\n  Divider,\r\n  Typography,\r\n} from 'antd'\r\nimport { LoadingOutlined, VideoCameraOutlined, FormatPainterOutlined, CloseCircleOutlined } from '@ant-design/icons'\r\n\r\n// NPM PACKAGES\r\nimport { Resizable } from \"re-resizable\";\r\n\r\n// CUSTOM\r\n//import FetchArtwork from './functional/FetchArtwork'\r\nimport QualitySlider from './functional/QualitySlider'\r\nimport LayerListItem from './functional/LayerListItem'\r\nimport UnloadedLayerListItem from './functional/UnloadedLayerListItem'\r\nimport BlendMode from './functional/BlendMode'\r\nimport UploadModal from './functional/UploadModal'\r\nimport CreateJob from './functional/CreateJob'\r\nimport RulerKit from './functional/RulerKit'\r\nimport SelectKit from './functional/SelectKit'\r\n\r\n// ANT DESIGN CONSTANTS\r\nconst { Option, OptGroup } = Select\r\nconst { TabPane } = Tabs\r\nconst { Search } = Input\r\nconst { Text, Link } = Typography\r\n\r\n// CONFIG\r\nconst { backendurl, port } = require('../config/config')\r\n\r\nclass SideBar extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      job: null,\r\n      layers: [],\r\n      rendered: null,\r\n      loading: false,\r\n      percent: 0,\r\n      jobList: [],\r\n      sidebarhidden: false,\r\n      sidebar: 'sidebar',\r\n      frontload: false,\r\n      useoutline: true,\r\n      objectSelection: null,\r\n      coordinatesActive: false,\r\n    }\r\n  }\r\n\r\n  fetchData = async (urlext, method) => {\r\n    this.setState({ loading: true, percent: 0 })\r\n    try {\r\n      let response = await fetch(backendurl + port + urlext, { method: method || 'GET' })\r\n      if (response.status !== 200) {\r\n        console.error(response)\r\n        //var err = 'Status: ' + response.status + ' => Message: ' + (await response.text()) // ADVANCED\r\n        var err = await response.text()\r\n        throw err\r\n      }\r\n      let data = await response.json()\r\n      this.setState({ loading: false, percent: 100 })\r\n      return data\r\n    } catch (err) {\r\n      this.setState({ loading: false })\r\n      message.error('Error => ' + err)\r\n      throw err\r\n    }\r\n  }\r\n\r\n  fetchLayer = async (layer) => {\r\n    if (layer.name !== 'front' && layer.name !== 'back') {\r\n      var layerdata = await this.fetchData(`/gbr2svg/getLayerArtwork?job=${this.state.job}&layer=${layer.name}`)\r\n    } else {\r\n      var layerdata = await this.fetchData(\r\n        `/gbr2svg/getFinishedArtwork?job=${this.state.job}&outline=${this.state.useoutline}`\r\n      )\r\n      layerdata = Array(layerdata.find((data) => data.name == layer.name))\r\n    }\r\n    return layerdata\r\n  }\r\n\r\n  replaceArtwork = async (job) => {\r\n    //this.props.clear()\r\n    console.log('Getting Finished Artowrk for', job)\r\n\r\n    if (this.state.frontload === true) {\r\n      var layerdata = await this.fetchData(`/gbr2svg/getLayerArtwork?job=${job}`)\r\n      var finisheddata = await this.fetchData(`/gbr2svg/getFinishedArtwork?job=${job}&outline=${this.state.useoutline}`)\r\n      this.props.setJob(job, layerdata, finisheddata)\r\n    } else if (this.state.frontload === false) {\r\n      var layerdata = await this.getLayerList(job)\r\n      finisheddata = [\r\n        {\r\n          name: 'front',\r\n          type: 'finished',\r\n          side: 'top',\r\n          svg: '',\r\n        },\r\n        {\r\n          name: 'back',\r\n          type: 'finished',\r\n          side: 'bottom',\r\n          svg: '',\r\n        },\r\n      ]\r\n      this.props.setJob(job, layerdata, finisheddata)\r\n    }\r\n    return\r\n  }\r\n\r\n  changeDOMSVG = (side, data) => {\r\n    this.removeDOMSVG(side)\r\n    var object = document.getElementById(side)\r\n    object.innerHTML = data\r\n    return\r\n  }\r\n\r\n  addDOMSVG = (side, data) => {\r\n    var object = document.getElementById(side)\r\n    object.innerHTML = data\r\n  }\r\n\r\n  removeDOMSVG = (side) => {\r\n    var object = document.getElementById(side)\r\n    object.innerHTML = ''\r\n  }\r\n\r\n  getJobList = async (search) => {\r\n    let data = await this.fetchData(`/joblist?search=${search}`)\r\n    var jobList = data.Jobs.map((job) => job.Name)\r\n    this.setState({ jobList: jobList })\r\n    return jobList\r\n  }\r\n\r\n  getLayerList = async (job) => {\r\n    let data = await this.fetchData(`/gbr2svg/getLayerList?job=${job}`)\r\n    return data\r\n  }\r\n\r\n  handleJobDelete = async (job) => {\r\n    console.log(job)\r\n    let data = await this.fetchData(`/job?job=${job}`, 'DELETE')\r\n    this.getJobList('')\r\n    console.log(data)\r\n    return data\r\n  }\r\n\r\n  handleFrontLoad = (value) => {\r\n    if (value === true) {\r\n      this.replaceArtwork(this.state.job)\r\n    }\r\n    this.setState({ frontload: value })\r\n  }\r\n\r\n  handleUseOutline = (value) => {\r\n    this.setState({ useoutline: value })\r\n  }\r\n\r\n  hideSidebar = () => {\r\n    this.setState({ sidebarhidden: true, sidebar: 'sidebar-hidden' })\r\n  }\r\n\r\n  showSidebar = () => {\r\n    this.setState({ sidebarhidden: false, sidebar: 'sidebar' })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ padding: '10px', width: '200px', height: '100%' }}>\r\n        <Button\r\n          type='text'\r\n          className='togglesidebar'\r\n          hidden={this.state.sidebarhidden}\r\n          onClick={() => this.hideSidebar()}\r\n        >\r\n          HIDE\r\n        </Button>\r\n        <Button\r\n          type='text'\r\n          className='togglesidebar'\r\n          hidden={!this.state.sidebarhidden}\r\n          onClick={() => this.showSidebar()}\r\n        >\r\n          SHOW\r\n        </Button>\r\n        <Resizable\r\n          style={{ padding: 0 }}\r\n          defaultSize={{ height: '100%', width: '200px', }}\r\n          enable={{ top: false, right: true, bottom: false, left: false, topRight: false, bottomRight: false, bottomLeft: false, topLeft: false }}\r\n          maxWidth='400px'\r\n          minWidth='200px'\r\n        >\r\n\r\n          <Card\r\n            style={{\r\n              backgroundColor: 'rgba(30, 30, 30, 0.85)',\r\n              backdropFilter: 'blur(25px)',\r\n              height: '100%',\r\n              width: '-webkit-fill-available',\r\n              transition: '0.5s ease',\r\n              pointerEvents: 'all'\r\n            }}\r\n            bodyStyle={{\r\n              height: 'calc(100% - 100px)',\r\n              padding: '0px'\r\n            }}\r\n            title={\r\n              this.state.loading ? <Spin indicator={<LoadingOutlined spin />} /> : this.state.job || 'GRX Gerber Renderer'\r\n            }\r\n            className={this.state.sidebar}\r\n          >\r\n            <Tabs animated={{ inkBar: true, tabPane: true }} size='small' defaultActiveKey='1' onChange={(key) => console.log(key)} centered>\r\n              <TabPane tab='Jobs' key='1' >\r\n                <Search placeholder='input search' onSearch={(value) => this.getJobList(value)} style={{ width: '-webkit-fill-available' }} />\r\n                <div style={{ height: '100%', position: 'relative', overflowX: 'hidden', overflowY: 'scroll', height: '100%' }}>\r\n                  <List\r\n                    size='small'\r\n                    header={\r\n                      <Row style={{ margin: '0px' }}>\r\n                        <Col span={15} style={{ padding: '0px 10px' }}>\r\n                          <div>Job List</div>\r\n                        </Col>\r\n                        <Col span={9} style={{ padding: '0px', textAlign: 'right' }}>\r\n                          <CreateJob\r\n                            replaceArtwork={(job) => this.replaceArtwork(job)}\r\n                            update={() => this.getJobList('')}\r\n                          />\r\n                        </Col>\r\n                      </Row>\r\n                    }\r\n                    //bordered\r\n                    dataSource={this.state.jobList}\r\n                    renderItem={(jobname) => (\r\n                      <List.Item style={{ padding: '5px 5px' }}>\r\n                        <Button\r\n                          type='link'\r\n                          style={{ width: '90%', height: '27px' }}\r\n                          onClick={() => this.replaceArtwork(jobname)}\r\n                        >\r\n                          {jobname}\r\n                        </Button>\r\n                        <Popconfirm\r\n                          title='Are you sure delete this job?'\r\n                          onConfirm={() => this.handleJobDelete(jobname)}\r\n                          okText='Yes'\r\n                          cancelText='No'\r\n                        >\r\n                          <CloseCircleOutlined />\r\n                        </Popconfirm>\r\n                      </List.Item>\r\n                    )}\r\n                  />\r\n                </div>\r\n              </TabPane>\r\n              <TabPane tab='Layers' key='2' style={{ overflowX: 'hidden', overflowY: 'scroll', height: '100%' }}>\r\n                <List\r\n                  size='small'\r\n                  header={\r\n                    <Row style={{ margin: '0px' }}>\r\n                      <Col span={15} style={{ padding: '0px 10px' }}>\r\n                        <div>Layers</div>\r\n                      </Col>\r\n                      <Col span={9} style={{ padding: '0px', textAlign: 'right' }}>\r\n                        <UploadModal replaceArtwork={(job) => this.replaceArtwork(job)} job={this.state.job} />\r\n                      </Col>\r\n                    </Row>\r\n                  }\r\n                  //bordered\r\n                  dataSource={this.state.layers}\r\n                  renderItem={(item) => (\r\n                    <List.Item style={{ padding: '8px 8px' }}>\r\n                      {this.state.frontload ? (\r\n                        <LayerListItem key={item} layer={item} />\r\n                      ) : (\r\n                        <UnloadedLayerListItem\r\n                          key={item}\r\n                          layer={item}\r\n                          add={(...props) => this.props.setSVGinDIV(...props)}\r\n                          remove={(...props) => this.props.removeSVGinDIV(...props)}\r\n                          fetchLayer={(...props) => this.fetchLayer(...props)}\r\n                        />\r\n                      )}\r\n                    </List.Item>\r\n                  )}\r\n                />\r\n                {/* <List\r\n                size='small'\r\n                header={<div>Steps</div>}\r\n                //bordered\r\n                dataSource={this.state.layerList}\r\n                renderItem={(item) => <List.Item>{item}</List.Item>}\r\n              /> */}\r\n              </TabPane>\r\n              <TabPane tab='Tools' key='3' forceRender style={{ overflowX: 'hidden', overflowY: 'scroll', height: '100%' }}>\r\n                <Divider plain>Kit</Divider>\r\n                <SelectKit />\r\n                <RulerKit />\r\n                <Divider plain>Settings</Divider>\r\n                <Row style={{ margin: '5px ' }}>\r\n                  <Col flex='30px' style={{ padding: '5px' }}>\r\n                    <VideoCameraOutlined />\r\n                  </Col>\r\n                  <Col flex='auto'>\r\n                    <Select\r\n                      defaultValue='orthographic'\r\n                      onChange={(value) => this.props.cameraSelector(value)}\r\n                      style={{ width: '100%' }}\r\n                    >\r\n                      <Option value='perspective'>Perspective</Option>\r\n                      <Option value='orthographic'>Orthographic</Option>\r\n                    </Select>\r\n                  </Col>\r\n                </Row>\r\n                <QualitySlider />\r\n                <BlendMode />\r\n                <Row style={{ margin: '5px ' }}>\r\n                  <Col flex='auto' style={{ padding: '5px' }}>\r\n                    Front Load\r\n                  </Col>\r\n                  <Col flex='30px' style={{ padding: '5px' }}>\r\n                    <Switch\r\n                      size='small'\r\n                      checked={this.state.frontload}\r\n                      onChange={(checked) => this.handleFrontLoad(checked)}\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n                <Row style={{ margin: '5px ' }}>\r\n                  <Col flex='auto' style={{ padding: '5px' }}>\r\n                    Use Outline\r\n                  </Col>\r\n                  <Col flex='30px' style={{ padding: '5px' }}>\r\n                    <Switch\r\n                      size='small'\r\n                      checked={this.state.useoutline}\r\n                      onChange={(checked) => this.handleUseOutline(checked)}\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n              </TabPane>\r\n            </Tabs>\r\n          </Card>\r\n        </Resizable>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.getJobList('')\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    console.log('updated')\r\n  }\r\n\r\n  static getDerivedStateFromProps(props, state) {\r\n    var newState = {}\r\n    console.log(state, props)\r\n    if (props.job !== state.job || props.layers !== state.layers) {\r\n      newState.job = props.job\r\n      newState.layers = props.layers\r\n      return newState\r\n    } else {\r\n      return null\r\n    }\r\n  }\r\n}\r\n\r\nexport default SideBar\r\n\r\n// DEPRECIATED METHODS\r\n","import React, { useState, useEffect, useContext } from 'react'\r\n\r\nimport { DrawBoardContext } from '../Renderer'\r\n\r\nconst InfoCoords = (props) => {\r\n  const [coordinates, setCoordinates] = useState({\r\n    pixel: { x: 0, y: 0 },\r\n    inch: { x: 0, y: 0 },\r\n    mm: { x: 0, y: 0 },\r\n    draw: { x: 0, y: 0 },\r\n  })\r\n  const { drawContainer, drawBoardSize, drawBoardScale, infobar } = useContext(DrawBoardContext)\r\n\r\n  const setInfoCoordinates = (event) => {\r\n    // let infoBar = document.getElementById('bottom-info-bar')\r\n    let oldInfo = infobar.childNodes[0]\r\n    let mouseCoordinates = {\r\n      pixel: { x: 0, y: 0 },\r\n      inch: { x: 0, y: 0 },\r\n      mm: { x: 0, y: 0 },\r\n      draw: { x: 0, y: 0 },\r\n    }\r\n    mouseCoordinates.pixel.x = (event.offsetX - drawBoardSize / 2) * drawBoardScale\r\n    mouseCoordinates.pixel.y = -(event.offsetY - drawBoardSize / 2) * drawBoardScale\r\n    mouseCoordinates.inch.x = mouseCoordinates.pixel.x / 96\r\n    mouseCoordinates.inch.y = mouseCoordinates.pixel.y / 96\r\n    mouseCoordinates.mm.x = mouseCoordinates.inch.x * 24\r\n    mouseCoordinates.mm.y = mouseCoordinates.inch.y * 24\r\n    mouseCoordinates.draw.x = event.offsetX\r\n    mouseCoordinates.draw.y = -event.offsetY\r\n    let info = document.createElement('h4')\r\n    info.innerHTML = `( ${coordinates.inch.x.toFixed(5)}in, ${coordinates.inch.y.toFixed(5)}in )`\r\n    infobar.replaceChild(info, oldInfo)\r\n    setCoordinates(mouseCoordinates)\r\n  }\r\n\r\n  useEffect(() => {\r\n    // Mount and Update\r\n    // drawContainer ? drawContainer.addEventListener('mousemove', setInfoCoordinates) : null\r\n    return () => {\r\n      // Unmount\r\n      drawContainer?.removeEventListener('mousemove', setInfoCoordinates)\r\n    }\r\n  })\r\n\r\n  return <div></div>\r\n}\r\n\r\nexport default InfoCoords\r\n","// REACT\r\nimport React, { Component } from 'react'\r\nimport SideBar from './SideBar'\r\n\r\n// THREE\r\nimport * as THREE from 'three'\r\nimport { OrbitControls } from \"three/examples/jsm/controls/OrbitControls\";\r\nimport { CSS3DRenderer, CSS3DObject } from 'three/examples/jsm/renderers/CSS3DRenderer.js'\r\nimport Stats from 'three/examples/jsm/libs/stats.module.js'\r\n\r\n// FUNCTIONAL\r\nimport InfoCoords from './functional/InfoCoords'\r\n\r\n// // TRACESPACE\r\n// const pcbStackup = require('pcb-stackup')\r\n\r\n// SVGJS\r\nimport SVG from 'svg.js'\r\n\r\n// STYLE\r\nimport '../App-simple.css'\r\n\r\nconst DrawBoardContext = React.createContext()\r\n\r\nclass Renderer extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      rendered: null,\r\n      job: null,\r\n      CSS3DObjects: [],\r\n      cameraType: 'orthographic',\r\n      mouseCoordinates: { pixel: { x: 0, y: 0 }, inch: { x: 0, y: 0 }, mm: { x: 0, y: 0 }, draw: { x: 0, y: 0 } },\r\n    }\r\n    this.drawBoardSize = 100000\r\n    this.drawBoardScale = 0.1\r\n    this.svgContainer = null\r\n    this.drawContainer = null\r\n  }\r\n\r\n  CSS3DObjects = []\r\n\r\n  // Three.js\r\n  addInitSVGFromDom = () => {\r\n    // FRONT\r\n    var element = document.getElementById('front')\r\n    this.frontPCBObject = new CSS3DObject(element)\r\n    this.frontPCBObject.name = 'front'\r\n    this.frontPCBObject.position.x = 0\r\n    this.frontPCBObject.position.y = 25\r\n    this.frontPCBObject.position.z = 1\r\n    this.frontPCBObject.context = element.getAttribute('data-context')\r\n    this.cssScene.add(this.frontPCBObject)\r\n\r\n    // BACK\r\n    var element = document.getElementById('back')\r\n    this.backPCBObject = new CSS3DObject(element)\r\n    this.backPCBObject.name = 'back'\r\n    this.backPCBObject.position.x = 0\r\n    this.backPCBObject.position.y = 25\r\n    this.backPCBObject.position.z = 0.5\r\n    this.backPCBObject.context = element.getAttribute('data-context')\r\n    this.cssScene.add(this.backPCBObject)\r\n\r\n    this.setState({ CSS3DObjects: [this.frontPCBObject, this.backPCBObject] })\r\n  }\r\n\r\n  initDrawBoard = () => {\r\n    if (/iPhone|iPad|iPod|Android/i.test(navigator.userAgent)) {\r\n      return\r\n    }\r\n    this.drawContainer = document.createElement('div')\r\n    this.drawContainer.id = 'draw-board'\r\n    this.drawContainer.style.cssText = 'position: absolute; width: 0px; height: 0px;'\r\n    this.drawContainer.style.zIndex = '1000'\r\n    this.drawContainer.setAttribute('data-context', 'drawing')\r\n    // this.drawContainer.style.zIndex = 1000\r\n    this.drawContainer.style.transform =\r\n      'matrix3d(1, 0, 0, 0, 0, -1, 0, 0, 0, 0, 1, 0, 0, 0, 1, 1) scale(var(--svg-scale))'\r\n    this.svgContainer.appendChild(this.drawContainer)\r\n    // console.log(document.getElementById('draw-board'))\r\n    this.drawing = SVG(this.drawContainer.id).size(this.drawBoardSize, this.drawBoardSize)\r\n    let svgChildElement = this.drawContainer.childNodes[0]\r\n    svgChildElement.style.top = `-${this.drawBoardSize / 2}px`\r\n    svgChildElement.style.left = `-${this.drawBoardSize / 2}px`\r\n    svgChildElement.style.position = `relative`\r\n    svgChildElement.style.transformOrigin = `center`\r\n    svgChildElement.style.transform = `scale(${this.drawBoardScale})`\r\n    svgChildElement.style.cursor = 'crosshair'\r\n  }\r\n\r\n  // Higher Level Abstraction Functions\r\n  setJob = (job, layerartwork, finishedartwork) => {\r\n    this.removeAllLayers()\r\n    layerartwork.forEach((layer) => {\r\n      this.addLayer(layer, false)\r\n    })\r\n    finishedartwork.forEach((layer) => {\r\n      this.addLayer(layer, false)\r\n    })\r\n    this.setState({ CSS3DObjects: this.cssScene.children, job: job })\r\n  }\r\n\r\n  // High Level Absraction Functions\r\n  addLayer = (layer, visible) => {\r\n    var divLayer = document.createElement('div')\r\n    divLayer.id = layer.name\r\n    //divLayer.style.visibility = visible\r\n    divLayer.setAttribute('data-type', layer.type)\r\n    divLayer.setAttribute('data-side', layer.side)\r\n    divLayer.setAttribute('data-context', 'board')\r\n    divLayer.style.width = '0px'\r\n    divLayer.style.height = '0px'\r\n    divLayer.style.position = 'relative'\r\n    divLayer.style.color = `rgb(${Math.floor(Math.random() * 256)}, ${Math.floor(Math.random() * 256)}, ${Math.floor(\r\n      Math.random() * 256\r\n    )}, 0.7)`\r\n    if (layer.svg) {\r\n      divLayer = this.setSVGinDIV(layer, divLayer)\r\n    }\r\n    this.addElementToThree(divLayer, visible)\r\n  }\r\n\r\n  setSVGinDIV = (layer, divLayer) => {\r\n    divLayer.innerHTML = layer.svg\r\n    var svgChildElement = divLayer.childNodes[0]\r\n    var viewBoxString = svgChildElement.getAttribute('viewBox')\r\n    var widthattr = svgChildElement.getAttribute('width')\r\n    var unit = widthattr.slice(-2)\r\n    var viewBox = viewBoxString.split(' ')\r\n    var originx = Number(viewBox[0]) / 1000\r\n    var originy = Number(viewBox[1]) / 1000\r\n    var width = Number(viewBox[2]) / 1000\r\n    var height = Number(viewBox[3]) / 1000\r\n    //console.log(originx, originy, width, height)\r\n    divLayer.dataset.width = width\r\n    divLayer.dataset.height = height\r\n    svgChildElement.style.position = 'relative'\r\n    svgChildElement.style.transformOrigin = '0 0'\r\n    if (divLayer.id === 'back') {\r\n      svgChildElement.style.bottom = `calc(${height + originy}${unit} * var(--svg-scale))`\r\n      svgChildElement.style.left = `calc(${originx + width}${unit} * var(--svg-scale))`\r\n    } else if (divLayer.id === 'front') {\r\n      var widthtext = document.createElement('h4')\r\n      widthtext.className = 'width-measurement'\r\n      widthtext.innerHTML = `WIDTH: ${width}${unit}`\r\n      widthtext.style.bottom = `calc(${originy}${unit} * var(--svg-scale))`\r\n      widthtext.style.left = `calc(${originx + width}${unit} * var(--svg-scale))`\r\n      divLayer.appendChild(widthtext)\r\n      var heighttext = document.createElement('h4')\r\n      heighttext.className = 'height-measurement'\r\n      heighttext.innerHTML = `HEIGHT: ${height}${unit}`\r\n      heighttext.style.bottom = `calc(${height + originy}${unit} * var(--svg-scale))`\r\n      heighttext.style.left = `calc(${originx}${unit} * var(--svg-scale))`\r\n      divLayer.appendChild(heighttext)\r\n      svgChildElement.style.bottom = `calc(${height + originy}${unit} * var(--svg-scale))`\r\n      svgChildElement.style.left = `calc(${originx}${unit} * var(--svg-scale))`\r\n    } else {\r\n      svgChildElement.style.bottom = `calc(${height + originy}${unit} * var(--svg-scale))`\r\n      svgChildElement.style.left = `calc(${originx}${unit} * var(--svg-scale))`\r\n    }\r\n    return divLayer\r\n  }\r\n\r\n  removeSVGinDIV = (layer) => {\r\n    var divLayer = document.getElementById(layer.name)\r\n    divLayer.innerHTML = ''\r\n  }\r\n\r\n  removeLayer = (layer) => {\r\n    this.removeCSS3DObject(layer.name)\r\n  }\r\n\r\n  // Low Level Abstraction Functions\r\n  addElementToThree = (divLayer, visible) => {\r\n    var newCSS3DObject = new CSS3DObject(divLayer)\r\n    newCSS3DObject.name = divLayer.id\r\n    newCSS3DObject.visible = visible\r\n    newCSS3DObject.context = divLayer.getAttribute('data-context')\r\n    newCSS3DObject.position.x = 0\r\n    newCSS3DObject.position.y = 0\r\n    //newCSS3DObject.translate(0, 0, 0)\r\n    if (newCSS3DObject.name === 'back') {\r\n      newCSS3DObject.position.z = -0.5\r\n    } else if (newCSS3DObject.name === 'front') {\r\n      newCSS3DObject.position.z = 0.5\r\n    }\r\n    this.cssScene.add(newCSS3DObject)\r\n  }\r\n\r\n  removeCSS3DObject = (name) => {\r\n    this.cssScene.remove(this.state.CSS3DObjects.find((x) => x.name === name))\r\n    this.setState({ CSS3DObjects: this.cssScene.children })\r\n  }\r\n\r\n  removeAllCSS3DObjects = () => {\r\n    for (var i = this.state.CSS3DObjects.length - 1; i >= 0; i--) {\r\n      this.cssScene.remove(this.state.CSS3DObjects[i])\r\n    }\r\n    this.setState({ CSS3DObjects: this.cssScene.children })\r\n  }\r\n\r\n  removeAllLayers = () => {\r\n    let boardLayers = this.state.CSS3DObjects.filter((layer) => layer.context == 'board')\r\n    for (var i = boardLayers.length - 1; i >= 0; i--) {\r\n      this.cssScene.remove(boardLayers[i])\r\n    }\r\n    this.setState({ CSS3DObjects: this.cssScene.children })\r\n  }\r\n\r\n  updateCSSObjects = () => {\r\n    var children = this.cssScene.children\r\n    children.forEach((child) => {\r\n      this.cssScene.remove(child)\r\n    })\r\n    this.state.CSS3DObjects.forEach((object) => {\r\n      this.cssScene.add(object)\r\n    })\r\n  }\r\n\r\n  // Camera type switcher\r\n  cameraSelector = (type) => {\r\n    if (type === 'perspective') {\r\n      this.camera = new THREE.PerspectiveCamera(75, this.rendercontainer.innerWidth / this.rendercontainer.innerHeight, 0.01, 1000)\r\n      this.camera.position.z = 700\r\n      this.controls = new OrbitControls(this.camera, this.cssRenderer.domElement)\r\n      this.controls.enableRotate = true\r\n      this.controls.zoomSpeed = 1\r\n      //this.controls.enableZoom = true\r\n      this.setState({ cameraType: type })\r\n    } else if (type === 'orthographic') {\r\n      this.camera = new THREE.OrthographicCamera(\r\n        this.rendercontainer.offsetWidth / -2,\r\n        this.rendercontainer.offsetWidth / 2,\r\n        this.rendercontainer.offsetHeight / 2,\r\n        this.rendercontainer.offsetHeight / -2,\r\n        1,\r\n        1000\r\n      )\r\n      this.camera.position.z = 900\r\n      this.controls = new OrbitControls(this.camera, this.cssRenderer.domElement)\r\n      this.controls.enableRotate = false\r\n      this.controls.zoomSpeed = 1\r\n      //this.controls.enableZoom = false\r\n      this.setState({ cameraType: type })\r\n    } else {\r\n      console.log('unkown camera type:', type)\r\n    }\r\n  }\r\n\r\n  setupScene = () => {\r\n\r\n    // Experimental\r\n    let width = this.rendercontainer.clientWidth\r\n    let height = this.rendercontainer.clientHeight\r\n\r\n    // Create Scene\r\n    this.cssScene = new THREE.Scene()\r\n    this.rendercontainer.style.setProperty('--svg-scale', '1')\r\n\r\n    // Create Renderer\r\n    this.cssRenderer = new CSS3DRenderer()\r\n    this.cssRenderer.setSize(width, height)\r\n    this.cameraSelector('orthographic')\r\n    this.rendercontainer.appendChild(this.cssRenderer.domElement)\r\n    this.cssRenderer.domElement.id = 'css-renderer'\r\n    this.svgContainer = this.cssRenderer.domElement.childNodes[0]\r\n    this.svgContainer.id = 'svg-container'\r\n\r\n    // Outer Method to add objects to dom\r\n    // this.addInitSVGFromDom()\r\n    // rendercontainer.onwheel = (event) => this.customZoom(event.wheelDelta) // Depreciated => zooming is vert slow | planning to replace with quality slider\r\n\r\n    // Other Three objects\r\n    this.clock = new THREE.Clock()\r\n    this.stats = new Stats()\r\n    this.stats.domElement.style.right = '10px'\r\n    this.stats.domElement.style.left = 'auto'\r\n    this.stats.domElement.style.position = 'absolute'\r\n    this.stats.domElement.style.zIndex = '1002'\r\n    this.stats.domElement.style.top = '10px'\r\n    // this.stats.domElement.classList.add('stats')\r\n    this.rendercontainer.appendChild(this.stats.domElement)\r\n    this.setState({ rendered: true })\r\n  }\r\n\r\n  onWindowResize = () => {\r\n    if (this.rendercontainer) {\r\n      this.camera.aspect = this.rendercontainer.offsetWidth / this.rendercontainer.offsetHeight\r\n      this.camera.updateProjectionMatrix()\r\n      this.cssRenderer.setSize(this.rendercontainer.offsetWidth, this.rendercontainer.offsetHeight)\r\n    }\r\n\r\n  }\r\n\r\n  animationHandler = () => {\r\n    this.cssRenderer.render(this.cssScene, this.camera)\r\n    this.stats.update()\r\n    this.controls.update()\r\n    requestAnimationFrame(this.animationHandler)\r\n  }\r\n\r\n  render() {\r\n    console.log('Rendering Renderer', this.units)\r\n    let layers = this.state.CSS3DObjects.filter((layer) => layer.context == 'board')\r\n    //console.log(layers)\r\n    return (\r\n      <div id='main' style={{ position: 'relative', height: '100%', zIndex: 1000 }}>\r\n        <DrawBoardContext.Provider\r\n          value={{\r\n            infobar: this.infobar,\r\n            rendercontainer: this.rendercontainer,\r\n            svgContainer: this.svgContainer,\r\n            drawContainer: this.drawContainer,\r\n            drawBoardSize: this.drawBoardSize,\r\n            drawBoardScale: this.drawBoardScale,\r\n          }}\r\n        >\r\n\r\n          <SideBar\r\n            style={{ zIndex: '10' }}\r\n            job={this.state.job}\r\n            layers={layers}\r\n            svgContainer={this.svgContainer}\r\n            drawContainer={this.drawContainer}\r\n            drawBoardSize={this.drawBoardSize}\r\n            drawBoardScale={this.drawBoardScale}\r\n            cameraSelector={(...props) => this.cameraSelector(...props)}\r\n            setJob={(...props) => this.setJob(...props)}\r\n            setSVGinDIV={(layer, divLayer) => this.setSVGinDIV(layer, divLayer)}\r\n            removeSVGinDIV={(layer) => this.removeSVGinDIV(layer)}\r\n            clear={() => this.removeAllCSS3DObjects()}\r\n            update={() => this.updateCSSObjects()}\r\n          />\r\n          <div\r\n            id='three'\r\n            style={{ width: '-webkit-fill-available', height: '-webkit-fill-available', position: 'absolute', left: 0, top: 0, zIndex: '-1' }}\r\n            ref={(rendercontainer) => { this.rendercontainer = rendercontainer }}\r\n          />\r\n          <InfoCoords />\r\n        </DrawBoardContext.Provider>\r\n        <div\r\n          id='bottom-info-bar'\r\n          ref={(infobar) => { this.infobar = infobar }}\r\n          style={{\r\n            position: 'absolute',\r\n            width: '-webkit-fill-available',\r\n            textAlign: 'center',\r\n            bottom: '0px',\r\n            zIndex: '1000',\r\n            // filter: 'drop-shadow(2px 4px 6px black)',\r\n            textShadow: '-1px 0px 2px black, 0 1px 2px black, 1px 0 2px black, 0 -1px 2px black',\r\n          }}\r\n        >\r\n          <h4>0in, 0in</h4>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setupScene()\r\n    this.animationHandler()\r\n    this.initDrawBoard()\r\n    new window.ResizeObserver(this.onWindowResize).observe(this.rendercontainer)\r\n    this.controls.update()\r\n  }\r\n}\r\n\r\nexport { Renderer as default, DrawBoardContext }\r\n","import React, { Component } from 'react'\r\nimport { Spin, Switch, Alert, Button, Card } from 'antd'\r\nimport { LoadingOutlined } from '@ant-design/icons'\r\nimport './Appcustom.css'\r\nimport Renderer from './components/Renderer'\r\nimport { version } from '../package.json'\r\n\r\nconst dotenv = require('dotenv')\r\ndotenv.config()\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = { windowheight: window.innerHeight }\r\n  }\r\n\r\n  componentDidMount() {\r\n    console.log(process.env)\r\n  }\r\n\r\n  render() {\r\n    console.log('Rendering App', version)\r\n    return (\r\n      <div style={{ top: 0, left: 0, height: '100vh', width: '100vw', position: 'absolute' }}>\r\n        <div style={{ margin: 0, height: '-webkit-fill-available' }}>\r\n          <Renderer />\r\n        </div>\r\n\r\n        {/* <Card title='test' className='sidebar'>\r\n          <Button onClick={() => this.testFetch()}>Hello</Button>\r\n        </Card> */}\r\n        <div className='icon-attribute'>\r\n          <h6>!! DEVELOPMENT v{`${version}`} !!</h6>\r\n          <h6>\r\n            Software by{' '}\r\n            <a target='_blank' href='https://github.com/hpcreery'>\r\n              Hunter Creery\r\n            </a>{' '}\r\n          </h6>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport './index.css'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n"],"sourceRoot":""}